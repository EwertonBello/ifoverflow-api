-- MySQL Script generated by MySQL Workbench
-- seg 10 mai 2021 14:48:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ifoverflow
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ifoverflow
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ifoverflow` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE `ifoverflow` ;

-- -----------------------------------------------------
-- Table `ifoverflow`.`categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`categorias` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `ifoverflow`.`UF`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`UF` (
  `id_uf` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`id_uf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`campus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`campus` (
  `id_campus` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL,
  `UF_id_uf` INT NOT NULL,
  PRIMARY KEY (`id_campus`, `UF_id_uf`),
  INDEX `fk_campus_UF1_idx` (`UF_id_uf` ASC) VISIBLE,
  CONSTRAINT `fk_campus_UF1`
    FOREIGN KEY (`UF_id_uf`)
    REFERENCES `ifoverflow`.`UF` (`id_uf`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`classes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`classes` (
  `id_classe` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL,
  `descricao` TEXT NOT NULL,
  `limite` INT NOT NULL,
  PRIMARY KEY (`id_classe`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL,
  `votos` INT NOT NULL DEFAULT 0,
  `avatar` VARCHAR(200) NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `senha` VARCHAR(200) NOT NULL,
  `campus_id_campus` INT NOT NULL,
  `Classe_id_classe` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id_usuario`, `campus_id_campus`, `Classe_id_classe`),
  INDEX `fk_usuarios_campus1_idx` (`campus_id_campus` ASC) VISIBLE,
  INDEX `fk_usuarios_Classe1_idx` (`Classe_id_classe` ASC) VISIBLE,
  CONSTRAINT `fk_usuarios_campus1`
    FOREIGN KEY (`campus_id_campus`)
    REFERENCES `ifoverflow`.`campus` (`id_campus`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_usuarios_Classe1`
    FOREIGN KEY (`Classe_id_classe`)
    REFERENCES `ifoverflow`.`classes` (`id_classe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`perguntas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`perguntas` (
  `id_pergunta` INT NOT NULL AUTO_INCREMENT,
  `assunto` VARCHAR(100) NOT NULL,
  `descricao` TEXT(1000) NOT NULL,
  `votos` INT NOT NULL DEFAULT 0,
  `categorias_id_categoria` INT NOT NULL,
  `usuarios_id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_pergunta`, `categorias_id_categoria`, `usuarios_id_usuario`),
  INDEX `fk_perguntas_categorias2_idx` (`categorias_id_categoria` ASC) VISIBLE,
  INDEX `fk_perguntas_usuarios1_idx` (`usuarios_id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_perguntas_categorias2`
    FOREIGN KEY (`categorias_id_categoria`)
    REFERENCES `ifoverflow`.`categorias` (`id_categoria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_perguntas_usuarios1`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `ifoverflow`.`usuarios` (`id_usuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`respostas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`respostas` (
  `id_resposta` INT NOT NULL AUTO_INCREMENT,
  `descricao` TEXT(1000) NOT NULL,
  `votos` INT NOT NULL DEFAULT 0,
  `aceita` TINYINT NOT NULL DEFAULT 0,
  `usuarios_id_usuario` INT NOT NULL,
  `perguntas_id_pergunta` INT NOT NULL,
  PRIMARY KEY (`id_resposta`, `usuarios_id_usuario`, `perguntas_id_pergunta`),
  INDEX `fk_respostas_usuarios1_idx` (`usuarios_id_usuario` ASC) VISIBLE,
  INDEX `fk_respostas_perguntas1_idx` (`perguntas_id_pergunta` ASC) VISIBLE,
  CONSTRAINT `fk_respostas_usuarios1`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `ifoverflow`.`usuarios` (`id_usuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_respostas_perguntas1`
    FOREIGN KEY (`perguntas_id_pergunta`)
    REFERENCES `ifoverflow`.`perguntas` (`id_pergunta`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`tags` (
  `id_tag` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`id_tag`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`tags_perguntas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`tags_perguntas` (
  `tags_id_tag` INT NOT NULL,
  `perguntas_id_pergunta` INT NOT NULL,
  PRIMARY KEY (`tags_id_tag`, `perguntas_id_pergunta`),
  INDEX `fk_tags_has_perguntas_perguntas1_idx` (`perguntas_id_pergunta` ASC) VISIBLE,
  INDEX `fk_tags_has_perguntas_tags1_idx` (`tags_id_tag` ASC) VISIBLE,
  CONSTRAINT `fk_tags_has_perguntas_tags1`
    FOREIGN KEY (`tags_id_tag`)
    REFERENCES `ifoverflow`.`tags` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tags_has_perguntas_perguntas1`
    FOREIGN KEY (`perguntas_id_pergunta`)
    REFERENCES `ifoverflow`.`perguntas` (`id_pergunta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`comentarios_pergunta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`comentarios_pergunta` (
  `id_comentarios_pergunta` INT NOT NULL AUTO_INCREMENT,
  `descricao` TEXT(1000) NOT NULL,
  `usuarios_id_usuario` INT NOT NULL,
  `perguntas_id_pergunta` INT NOT NULL,
  PRIMARY KEY (`id_comentarios_pergunta`, `usuarios_id_usuario`, `perguntas_id_pergunta`),
  INDEX `fk_comentarios_pergunta_usuarios1_idx` (`usuarios_id_usuario` ASC) VISIBLE,
  INDEX `fk_comentarios_pergunta_perguntas1_idx` (`perguntas_id_pergunta` ASC) VISIBLE,
  CONSTRAINT `fk_comentarios_pergunta_usuarios1`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `ifoverflow`.`usuarios` (`id_usuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comentarios_pergunta_perguntas1`
    FOREIGN KEY (`perguntas_id_pergunta`)
    REFERENCES `ifoverflow`.`perguntas` (`id_pergunta`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`comentarios_resposta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`comentarios_resposta` (
  `id_comentarios_resposta` INT NOT NULL AUTO_INCREMENT,
  `descricao` TEXT(1000) NOT NULL,
  `usuarios_id_usuario` INT NOT NULL,
  `respostas_id_resposta` INT NOT NULL,
  PRIMARY KEY (`id_comentarios_resposta`, `usuarios_id_usuario`, `respostas_id_resposta`),
  INDEX `fk_comentarios_resposta_usuarios1_idx` (`usuarios_id_usuario` ASC) VISIBLE,
  INDEX `fk_comentarios_resposta_respostas1_idx` (`respostas_id_resposta` ASC) VISIBLE,
  CONSTRAINT `fk_comentarios_resposta_usuarios1`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `ifoverflow`.`usuarios` (`id_usuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comentarios_resposta_respostas1`
    FOREIGN KEY (`respostas_id_resposta`)
    REFERENCES `ifoverflow`.`respostas` (`id_resposta`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`votos_resposta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`votos_resposta` (
  `id_votos_resposta` INT NOT NULL AUTO_INCREMENT,
  `voto` TINYINT NOT NULL,
  `usuarios_id_usuario` INT NOT NULL,
  `respostas_id_resposta` INT NOT NULL,
  PRIMARY KEY (`id_votos_resposta`, `usuarios_id_usuario`, `respostas_id_resposta`),
  INDEX `fk_votos_resposta_usuarios1_idx` (`usuarios_id_usuario` ASC) VISIBLE,
  INDEX `fk_votos_resposta_respostas1_idx` (`respostas_id_resposta` ASC) VISIBLE,
  CONSTRAINT `fk_votos_resposta_usuarios1`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `ifoverflow`.`usuarios` (`id_usuario`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_votos_resposta_respostas1`
    FOREIGN KEY (`respostas_id_resposta`)
    REFERENCES `ifoverflow`.`respostas` (`id_resposta`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ifoverflow`.`votos_pergunta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ifoverflow`.`votos_pergunta` (
  `id_votos_pergunta` INT NOT NULL AUTO_INCREMENT,
  `voto` TINYINT NOT NULL,
  `usuarios_id_usuario` INT NOT NULL,
  `perguntas_id_pergunta` INT NOT NULL,
  PRIMARY KEY (`id_votos_pergunta`, `usuarios_id_usuario`, `perguntas_id_pergunta`),
  INDEX `fk_votos_resposta_usuarios1_idx` (`usuarios_id_usuario` ASC) VISIBLE,
  INDEX `fk_votos_pergunta_perguntas1_idx` (`perguntas_id_pergunta` ASC) VISIBLE,
  CONSTRAINT `fk_votos_resposta_usuarios10`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `ifoverflow`.`usuarios` (`id_usuario`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_votos_pergunta_perguntas1`
    FOREIGN KEY (`perguntas_id_pergunta`)
    REFERENCES `ifoverflow`.`perguntas` (`id_pergunta`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
